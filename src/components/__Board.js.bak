import React from 'react';
import ReactDOM from 'react-dom';
import {calculateWinner, getWinningColors} from '../utils/utils'

const Square = (props) => {
  return (
    <div className={'square ' + props.textColorClass} onClick={props.onClick}>
      {props.value}
    </div>
  );
}

export class Board extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      squares: Array(9).fill(null),
      colorClass: Array(9).fill(''),
      xIsNext: true
    }
  }
  setColorClass(squares, colorClass) {
    const winningBlock = calculateWinner(squares);
    colorClass = getWinningColors(colorClass.slice(), winningBlock)
  }
  handleClick(i) {
    const squares = this.state.squares.slice(),
      winningBlock = calculateWinner(squares);
    let colorClass = this.state.colorClass.slice();
    if (winningBlock !== null || squares[i] !== null) {
      return;
    }
    colorClass[i] = this.state.xIsNext === true ? 'red-color' : 'green-color';
    squares[i] = this.state.xIsNext === true ? 'X' : 'O';
    colorClass =  getWinningColors(colorClass, calculateWinner(squares));
    this.setState({
      squares: squares,
      xIsNext: !this.state.xIsNext,
      colorClass: colorClass
    });
  }
  renderSquare(i) {
    return <Square 
      value={this.state.squares[i]}
      textColorClass = {this.state.colorClass[i]}
      onClick = {() => this.handleClick(i)}
    />;
  }

  render() {
    const winner = calculateWinner(this.state.squares)
    let status = '',
      statusClass = 'status',
      board = [],
      boardRow = [];
    if ( winner !== null) {
      statusClass += ' winning-block'
      status = 'Winner ' + this.state.squares[winner[0]];
    } else {
      status = 'Next player: ' + (this.state.xIsNext === true? 'X' : 'O');
    }
    for (let i = 0; i < 9; i++) {
      if ( i > 0 && i % 3 === 0) {
        board.push(<div className="board-row">{boardRow}</div>)
        boardRow = []
      }
      boardRow.push( <div className="board-block">{this.renderSquare(i)}</div>)
    }
    board.push(<div className='board-row'>{boardRow}</div>)
    return (
      <div className="game">
        <div className="game-board">
          <div className={statusClass}>{status}</div>
          <div>{board}</div>
        </div>
      </div>
    );
  }
}